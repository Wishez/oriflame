@charset "UTF-8";
/* THIRD PARTY */
/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

/* Slider */
.slick-loading .slick-list {
  background: #fff url("./ajax-loader.gif") center center no-repeat; }

/* Icons */
@font-face {
  font-family: "slick";
  src: url("./fonts/slick.eot");
  src: url("./fonts/slick.eot?#iefix") format("embedded-opentype"), url("./fonts/slick.woff") format("woff"), url("./fonts/slick.ttf") format("truetype"), url("./fonts/slick.svg#slick") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Arrows */
.slick-prev,
.slick-next {
  position: absolute;
  display: block;
  height: 20px;
  width: 20px;
  line-height: 0px;
  font-size: 0px;
  cursor: pointer;
  background: transparent;
  color: transparent;
  top: 50%;
  transform: translate(0, -50%);
  padding: 0;
  border: none;
  outline: none; }
  .slick-prev:hover, .slick-prev:focus,
  .slick-next:hover,
  .slick-next:focus {
    outline: none;
    background: transparent;
    color: transparent; }
    .slick-prev:hover:before, .slick-prev:focus:before,
    .slick-next:hover:before,
    .slick-next:focus:before {
      opacity: 1; }
  .slick-prev.slick-disabled:before,
  .slick-next.slick-disabled:before {
    opacity: 0.25; }
  .slick-prev:before,
  .slick-next:before {
    font-family: "slick";
    font-size: 20px;
    line-height: 1;
    color: white;
    opacity: 0.75;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale; }

.slick-prev {
  left: -25px; }
  [dir="rtl"] .slick-prev {
    left: auto;
    right: -25px; }
  .slick-prev:before {
    content: "←"; }
    [dir="rtl"] .slick-prev:before {
      content: "→"; }

.slick-next {
  right: -25px; }
  [dir="rtl"] .slick-next {
    left: -25px;
    right: auto; }
  .slick-next:before {
    content: "→"; }
    [dir="rtl"] .slick-next:before {
      content: "←"; }

/* Dots */
.slick-dotted.slick-slider {
  margin-bottom: 30px; }

.slick-dots {
  position: absolute;
  bottom: -25px;
  list-style: none;
  display: block;
  text-align: center;
  padding: 0;
  margin: 0;
  width: 100%; }
  .slick-dots li {
    position: relative;
    display: inline-block;
    height: 20px;
    width: 20px;
    margin: 0 5px;
    padding: 0;
    cursor: pointer; }
    .slick-dots li button {
      border: 0;
      background: transparent;
      display: block;
      height: 20px;
      width: 20px;
      outline: none;
      line-height: 0px;
      font-size: 0px;
      color: transparent;
      padding: 5px;
      cursor: pointer; }
      .slick-dots li button:hover, .slick-dots li button:focus {
        outline: none; }
        .slick-dots li button:hover:before, .slick-dots li button:focus:before {
          opacity: 1; }
      .slick-dots li button:before {
        position: absolute;
        top: 0;
        left: 0;
        content: "•";
        width: 20px;
        height: 20px;
        font-family: "slick";
        font-size: 6px;
        line-height: 20px;
        text-align: center;
        color: black;
        opacity: 0.25;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale; }
    .slick-dots li.slick-active button:before {
      color: black;
      opacity: 0.75; }

/* CUSTOM */
a {
  transition: color 0.5s, background-color 0.5s; }

.defaultButton, .navigation__openMenuButton {
  transition: color 0.5s, background-color 0.5s, transform 0.1s, box-shadow, 0.5s !important; }

*, *:before, *:after {
  box-sizing: border-box; }

@font-face {
  font-family: "slick";
  src: url("./../fonts/slick.eot?") format("eot"), url("./../fonts/slick.woff2") format("woff2"), url("./../fonts/slick.woff") format("woff"), url("./../fonts/slick.ttf") format("truetype"), url("./../fonts/slick.svg#slick") format("svg"); }

@font-face {
  font-family: "Raleway";
  src: url("./../fonts/Raleway/Raleway-Regular.eot?") format("eot"), url("./../fonts/Raleway/Raleway-Regular.woff2") format("woff2"), url("./../fonts/Raleway/Raleway-Regular.woff") format("woff"), url("./../fonts/Raleway/Raleway-Regular.ttf") format("truetype"), url("./../fonts/Raleway/Raleway-Regular.svg#Raleway") format("svg"); }

@font-face {
  font-family: "Raleway";
  font-weight: bold;
  src: url("./../fonts/Raleway/Raleway-Bold.eot?") format("eot"), url("./../fonts/Raleway/Raleway-Bold.woff2") format("woff2"), url("./../fonts/Raleway/Raleway-Bold.woff") format("woff"), url("./../fonts/Raleway/Raleway-Bold.ttf") format("truetype"), url("./../fonts/Raleway/Raleway-Bold.svg#Raleway") format("svg"); }

@font-face {
  font-family: "Montserrat";
  src: url("./../fonts/Montserrat/Montserrat-Regular.eot?") format("eot"), url("./../fonts/Montserrat/Montserrat-Regular.woff2") format("woff2"), url("./../fonts/Montserrat/Montserrat-Regular.woff") format("woff"), url("./../fonts/Montserrat/Montserrat-Regular.ttf") format("truetype"), url("./../fonts/Montserrat/Montserrat-Regular.svg#Montserrat") format("svg"); }

@font-face {
  font-family: "Montserrat";
  font-weight: bold;
  src: url("./../fonts/Montserrat/Montserrat-Bold.eot?") format("eot"), url("./../fonts/Montserrat/Montserrat-Bold.woff2") format("woff2"), url("./../fonts/Montserrat/Montserrat-Bold.woff") format("woff"), url("./../fonts/Montserrat/Montserrat-Bold.ttf") format("truetype"), url("./../fonts/Montserrat/Montserrat-Bold.svg#Montserrat") format("svg"); }

@keyframes wobble {
  from {
    transform: none; }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg); }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg); }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg); }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg); }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg); }
  to {
    transform: none; } }

html, body {
  min-height: 100%;
  width: 100%; }

body {
  z-index: 0;
  font-family: "Raleway", serif;
  font-size: 16px;
  text-rendering: optimizeLegibility;
  -webkit-font-kerning: normal;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feauture-settings: "kern", "ling", "clig", "calt";
  line-height: 145%;
  font-size-adjust: 100%;
  word-break: break-word;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  -webkit-hyphenate-before: 2;
  -webkit-hyphenate-after: 3;
  hyphenate-lines: 3;
  color: #080808;
  background-color: #f9eaea; }
  body * {
    margin: 0;
    padding: 0;
    outline-color: #8BBDBD;
    border: 0; }
    body *:active {
      outline: 0; }
    body *:focus {
      outline: 0; }

a {
  transition: color 0.5s, background-color 0.5s; }

.defaultButton, .navigation__openMenuButton {
  transition: color 0.5s, background-color 0.5s, transform 0.1s, box-shadow, 0.5s !important; }

.mainSlider .slick-arrow {
  transition: opacity 0.5s; }

.paragraph, .footerContactsItem, .aboutItem__paragraph:first-child, .registrationFormButtons, .registrationFormController, .registrationFormController__checkRules, .sharesList, .sharesListItem, .share__referToAll, .share__text, .business__paragraph, .contacts__title, .media__video {
  margin-top: 1em; }

@media (max-width: 800px) {
  .navigation {
    margin-top: 1em; } }

.aboutItem, .business__title,
.business__image,
.business__video {
  margin-top: 1.5em; }

.mainSlider .slick-dots li {
  margin: 0; }

.copyright {
  margin-top: 2.5em; }

.present__button, .registrationInfo, .registrationFormButtons, .registrationFormController, .registrationFormButtons__button {
  margin-left: auto !important;
  margin-right: auto !important;
  display: block !important; }

@media (max-width: 800px) {
  .brand, .navigation__openMenuButton {
    margin-left: auto !important;
    margin-right: auto !important;
    display: block !important; } }

.mainSlider__slide, .registrationFormController__checkRules, .registrationFormController_checkbox, .business__image, .business__video, .media__video, .mapContainer__map {
  border-radius: 2px; }

.mainSlider .slick-dots li:first-child, .mainSlider .slick-dots li:last-child {
  border: 0; }

.header > .container, .navItem:hover, .navItem--active, .copyright, .mainSlider .slick-dots li button:before, .aboutItem_dark, .catalogsSlider .slick-next::before, .catalogsSlider .slick-prev::before, .registrationFormController__checkRules, .registrationFormController_checkbox {
  background-color: #663B31; }

.aboutItem_light {
  background-color: #f1f1f1; }

.imageContainer__image, .brand__name, .mainSlider__slide, .aboutItemImageContainer__image {
  background: center top no-repeat;
  background-size: cover; }

.navList, .mainSlider .slick-arrow {
  opacity: 0; }

.mainSlider:hover .slick-arrow {
  opacity: 1; }

.mainSlider .slick-dots li button:before {
  content: ''; }

.navList, .copyright, .registrationFormController__rules {
  text-align: center; }

.defaultButton {
  background-color: #540000 !important;
  color: #d8d8d8 !important; }
  .defaultButton:hover {
    color: #f1f1f1 !important;
    background-color: #870000 !important; }
  .defaultButton:active {
    transform: translateY(3px); }

.footer__paragraph, .footerContacts, .copyright, .aboutItem {
  float: left; }

.navigation, .navigation__openMenuButton, .shares__button {
  float: right; }

.section:after, .header:after {
  content: " ";
  display: block;
  clear: both; }

.section {
  padding: 5% 0; }
  @media (max-width: 800px) {
    .section {
      padding: 10% 0; } }

.registrationFormController__rules {
  padding-top: 0.5em; }

.navigation {
  padding-top: 1em; }

.footer__paragraph {
  padding-top: 2.5em; }

.formError {
  color: #870000; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button, .present__refer, .registrationFormController__label {
  display: block; }

.brand, .aboutItemImageContainer, .aboutItem__title, .share__referToAll {
  display: inline-block; }

.media .container {
  display: -ms-flexbox;
  display: flex; }

.media .container {
  -ms-flex-pack: justify;
  justify-content: space-between; }

.media .container {
  -ms-flex-align: center;
  align-items: center; }

.media .container {
  -ms-flex-flow: row wrap;
  flex-flow: row wrap; }

body, .catalogs__title {
  position: relative; }

.navigation__closeMenuButton {
  position: absolute; }

.navList {
  position: fixed; }

.paragraph, .registrationFormController__label {
  font-size: 1.125em; }

.navList {
  font-size: 1.3125em; }

.aboutItem, .catalogsSlider__slide {
  width: 25%; }

.aboutItemImageContainer {
  width: 33.33333%; }

.brand, .footerContacts, .media__video {
  width: 41.66667%; }

.navigation, .footer__paragraph {
  width: 58.33333%; }

.aboutItem__title {
  width: 66.66667%; }

.brand__name, .navItem__refer, .copyright, .mainSlider .slick-dots li button:before, .present__refer, .registrationFormButtons, .registrationFormController, .registrationFormController__input input {
  width: 100%; }

.navList {
  height: 100%; }

@media (max-width: 800px) {
  .brand, .navigation, .media__video {
    width: 100%; } }

.mainSlider .slick-arrow {
  z-index: 5; }

.registrationFormController {
  z-index: 1; }

.navList {
  left: 0; }

.navList {
  top: 0; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  cursor: pointer; }

.header > .container, .footer {
  overflow: hidden; }

h1, h2, h3, h4, h5, h6 {
  font-family: inherit;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  hyphens: none; }

h1 {
  font-size: 1.3125em;
  font-weight: normal; }

h2 {
  font-size: 1.5em;
  color: #540000; }
  @media (min-width: 801px) and (max-width: 991px) {
    h2 {
      font-size: 1.5em; } }
  @media (max-width: 800px) {
    h2 {
      font-size: 7vw; } }
  @media (max-width: 445px) {
    h2 {
      font-size: 8vw; } }

ul {
  list-style: none; }

a {
  border-radius: 5px;
  color: #2e2e2e !important; }
  a:hover {
    color: #9d2eb5 !important; }
  a:active {
    color: #080808; }
  a:visited {
    color: #080808; }
  a:focus {
    color: #080808; }
  a:hover, a:visited, a:active, a:focus {
    text-decoration: none; }
  a:hover {
    background-color: transparent; }

::-webkit-input-placeholder {
  color: #ececec; }

:-ms-input-placeholder {
  color: #ececec; }

::-moz-placeholder {
  color: #ececec; }

:-moz-placeholder {
  color: #ececec; }

:placeholder-shown {
  color: #ececec; }

textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  background-color: #2e2e2e !important;
  -webkit-text-fill-color: #2e2e2e !important; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  margin-right: 10px; }

input[type=number]:hover::-webkit-inner-spin-button,
input[type=number]:hover::-webkit-outer-spin-button {
  width: 20px;
  height: 20px; }

.header > .container {
  padding: 3em 5%;
  border-top-right-radius: 3px;
  border-top-left-radius: 3px; }

/* START BRAND */
.brand {
  max-width: 320px; }

.brand__name {
  padding-bottom: 18.76833%;
  background-image: url("./../img/logo.png"); }

/* END BRAND */
/* START NAVIGATION */
.navigation__openMenuButton {
  color: #2e2e2e;
  background-color: #f9eaea !important; }
  .navigation__openMenuButton:hover {
    color: #3b3b3b !important;
    background-color: #eec2c2 !important; }
  .navigation__openMenuButton:active {
    transform: translateY(3px); }
  @media (max-width: 800px) {
    .navigation__openMenuButton {
      float: none; } }

.navigation__closeMenuButton {
  z-index: 11;
  cursor: pointer;
  right: 5%;
  top: 5%; }

.navList {
  transition: opacity 1.5s, width 1s;
  width: 0;
  background-color: #f1f1f1;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: space-between;
  align-items: space-between;
  z-index: 10;
  padding-top: 10%; }

/* END NAV ITEMS */
/* START NAV ITEMS */
.navItem {
  transition: background 1s; }
  .navItem:hover .navItem__refer, .navItem--active .navItem__refer {
    color: #f9eaea !important; }
    .navItem:hover .navItem__refer:hover, .navItem--active .navItem__refer:hover {
      color: #f3d6d6 !important; }

.navItem__refer {
  padding: 1em 0;
  display: block; }

/* END NAV ITEMS */
/* START FOOTER	*/
/*
	END FOOTER
							*/
/*
	START FOOTER CONTACTS
										*/
.footer__paragraph {
  padding-right: 2em; }
  @media (max-width: 800px) {
    .footer__paragraph {
      display: none; } }

.footerContacts {
  padding-left: 1em;
  padding-right: 1em; }
  @media (max-width: 800px) {
    .footerContacts {
      text-align: center;
      width: 100%; } }

.footerContactsItem__label {
  color: #9c9c9c; }

/*
	END FOOTER CONTACTS
										*/
/*
	STANRT FOOTER COPYRIGHT
											*/
.copyright {
  color: #f1f1f1;
  padding: 3em 0; }

.copyright__refer {
  color: #ececec !important; }

.main {
  padding-bottom: 165px; }

.mainSlider .slick-arrow {
  top: 45%; }

.mainSlider .slick-next::before, .mainSlider .slick-prev::before {
  font-size: 60px;
  color: #f1f1f1; }

.mainSlider .slick-next {
  right: 60px; }

.mainSlider .slick-prev {
  left: 20px; }

.mainSlider .slick-dots li button:before {
  height: 10px; }

.mainSlider .slick-dots li {
  height: 10px;
  border-left: 1px solid #2e2e2e;
  border-right: 1px solid #2e2e2e;
  width: 20%; }

.mainSlider__slide {
  padding-bottom: 6.98%;
  opacity: 0;
  transition: opacity 1s; }

.fadeIn {
  opacity: 1; }

.present {
  padding: 0; }

.aboutItem {
  padding: 3% 1.5em;
  min-height: 720px; }
  @media (max-width: 1199px) {
    .aboutItem {
      width: 50%;
      min-height: 575px; } }
  @media (max-width: 800px) {
    .aboutItem {
      width: 100%;
      min-height: 490px;
      border-radius: 5px; } }
  .aboutItem_dark {
    color: #ececec; }

@media (min-width: 1200px) {
  .aboutItem:first-of-type {
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px; } }

@media (min-width: 1200px) {
  .aboutItem:last-child {
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px; } }

@media (max-width: 1199px) {
  .aboutItem:nth-child(even) {
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px; } }

.aboutItem:nth-child(even) .aboutItem__title {
  color: #663B31; }

@media (max-width: 1199px) {
  .aboutItem:nth-child(odd) {
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px; } }

.aboutItem:nth-child(odd) .aboutItem__title {
  color: #f9eaea; }

.aboutItem__title {
  text-align: right !important; }

.aboutItemImageContainer {
  max-width: 135px; }

.aboutItemImageContainer__image {
  padding-bottom: 100%; }
  .aboutItemImageContainer__image_light {
    background-image: url("./../img/purple-circle.png"); }
  .aboutItemImageContainer__image_dark {
    background-image: url("./../img/green-circle.png"); }

@media (max-width: 1199px) {
  .aboutItem__paragraph:first-child {
    margin-top: 2em; } }

.catalogsSlider .slick-arrow {
  top: -55px; }

.catalogsSlider .slick-next {
  right: 31px; }

.catalogsSlider .slick-prev {
  left: auto;
  right: 90px; }

.catalogsSlider .slick-next::before, .catalogsSlider .slick-prev::before {
  font-size: 35px;
  padding: 0 18px 13px; }

.catalogsSlider .slick-next::before {
  content: "\0203A"; }

.catalogsSlider .slick-prev::before {
  content: "\02039"; }

.catalogs__title {
  top: -22px; }

@media (min-width: 801px) and (max-width: 991px) {
  .catalogsSlider__slide {
    width: 33.33333%; } }

@media (max-width: 800px) {
  .catalogsSlider__slide {
    width: 50%; } }

@media (max-width: 445px) {
  .catalogsSlider__slide {
    width: 100%; } }

.registrationInfo {
  max-width: 700px; }

.registrationForm {
  margin-top: 7%; }

.registrationFormButtons, .registrationFormController {
  max-width: 275px; }

.registrationFormController_narrow {
  max-width: 170px; }

.registrationFormController_checkbox {
  padding: 0.5em 0 0.5em 1em; }

.registrationFormController_switched {
  opacity: 1;
  transition: opacity 1s, max-height 1.4s;
  max-height: 150px; }

.registrationFormController__checkRules label, .registrationFormController_checkbox label {
  color: #f1f1f1 !important; }

.registrationFormController__checkRules {
  padding: 1em; }

.registrationFormController__input {
  display: block !important;
  margin: 0.3em auto 0 !important; }
  .registrationFormController__input input:valid, .registrationFormController__input input:invalid {
    border: 2px solid transparent; }
  .registrationFormController__input input:focus:valid {
    border-color: #9CE576; }
  .registrationFormController__input input:focus:invalid {
    border-color: #9d2eb5; }

.registrationFormController__rules {
  border-top: 1px solid #e0e0e0; }

.share__referToAll {
  padding: 0.5em 1em; }

.business > .container {
  max-width: 700px !important; }

@media (max-width: 800px) {
  .mapContainer__map {
    height: 290px; } }

.contactsList {
  margin-top: 1em !important; }

.media__video {
  padding-bottom: 28.125% !important; }
  @media (max-width: 800px) {
    .media__video {
      padding-bottom: 56.25% !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
